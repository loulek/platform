 // if (req.body.address){
    //   geocoder.geocode(req.body.address, function(err, data) {
    //     var longitude_new = data[0].longitude;
    //     var latitude_new = data[0].latitude;
    //     console.log("nlllllllllllll", longitude_new)
    //     Profile.find(
    //     {location: {
    //       $near: [longitude_new, latitude_new],
    //       $maxDistance: 1
    //     } || null},function(err,users){
    //       if (err){console.log(err); res.status(500).send("SOMETHING WRONG HERE")}
    //       res.send(users)
    //     })
    //   })}

 $.ajax({
                    type: "GET",
                    url:'/checkLoggedIn',
                    success:(resp) => {

                        if (resp.authenticated===true){
                            if (!that.state.eventId){
                                console.log("Data I'm sending: ", this.state.eventData);
                                $.ajax({
                                    type: "POST",
                                    // specify the url we want to upload our file to
                                    url: '/event/new',
                                    // this is how we pass in the actual file data from the form
                                    data: {
                                        title: this.state.eventData.title,
                                        address: this.state.eventData.address,
                                        startDate: this.state.eventData.startDate,
                                        endDate: this.state.eventData.endDate,
                                        startHour: this.state.eventData.startHour,
                                        endHour: this.state.eventData.endHour,
                                        workerNumber: this.state.eventData.workerNumber,
                                        description: this.state.eventData.description
                                    },
                                    success: function(response){
                                    console.log("response", response.event);
                                    var id=response.event
                                    that.setState({eventId: id})
                                    alert("SUCCESS CREATING A NEW EVENT!")
                                //   this.context.router.push({
                                //   pathname: '/search/'+id,
                                //   query: { modal: true },
                                //   state: { fromDashboard: true }
                                // })
                                    },
                                    error: function(error){
                                        console.log("error", error);
                                        if(!error.responseJSON.success){
                                            return alert(error.responseJSON.error)
                                        }
                                    }
                                })
                            }
                        else{
                            console.log("something here")
                            var id = that.state.eventId;
                            $.ajax({
                                type: "POST",
                                // specify the url we want to upload our file to
                                url: '/updateEvent/'+id,
                                // this is how we pass in the actual file data from the form
                                data: {
                                    title: this.state.eventData.title,
                                    address: this.state.eventData.address,
                                    startDate: this.state.eventData.startDate,
                                    endDate: this.state.eventData.endDate,
                                    startHour: this.state.eventData.startHour,
                                    endHour: this.state.eventData.endHour,
                                    workerNumber: this.state.eventData.workerNumber,
                                    description: this.state.eventData.description
                                },
                                success: function(response){
                                    alert("SUCCESS UPDATING EVENT!")
                                },
                                error: function(error){
                                    console.log("error", error);
                                }
                            })
                        }
                    }
                        else{
                            console.log("PLEASE LOG IN FIRST!22");
                            return
                        }
                    },
                    error:(err) =>{
                        if (err){console.log("error in creating event",err); return}
                    }
                })




            },
            error: function(err){
                console.log("error")
                if (err.error) {
                    alert("invalid address")
                }
            }
        })



 if (this.state.user.specialty){
            console.log("thisthsi",this)
            var languages = this.state.user.specialty.join(', ')
        }



    <Geosuggest inputClassName="form-control" placeholder="Where?" initialValue={this.state.artData.address} onSuggestSelect={this.suggestSelect.bind(this)} />

   <MyDatePicker onChange={this._changeStart.bind(this)} datetime={this.state.artData.startDate} placeholder={"From"} />
   
   
    <button className="btn btn-primary margin5 float-right" onClick={this._searchEvent.bind(this)} address={this.state.address}>Find Art</button>

===============================

    LANDING PAGE 
        { /*  This is the location autocompleter */ }
                        <div className="col-xs-10 col-md-4">
                            <Geosuggest inputClassName="form-control" placeholder="Where?" initialValue={this.state.eventData.address} onSuggestSelect={this.suggestSelect.bind(this)} id="address" />
                        </div>

                        { /*  This is the start date datepicket */ }
                        <div className="col-xs-10 col-md-2">
                            <MyDatePicker onChange={this._changeStart.bind(this)} datetime={this.state.eventData.startDate} placeholder={"From"} />
                        </div>

                        { /*  This is the end date datepicket */ }
                        <div className="col-xs-10 col-md-2 col-md-offset-1">
                            <MyDatePicker onChange={this._changeEnd.bind(this)} datetime={this.state.eventData.endDate} placeholder={"To"} />
                        </div>

====

          _searchEvent(e) {
        e.preventDefault();

        console.log("INFO THAT GETS PASSED IN", this.state);
        console.log("INFO THAT GETS PASSED IN", this.state.eventData.address)
        console.log("THIS>STATE>EVENTDATA", this.state.eventData);
        console.log("THIS>STATE>EVENTDATA>STARTDATE", this.state.eventData.startDate);
        this.context.router.push({

            pathname: '/search',
            query: {
                address: this.state.eventData.address,
                startDate: this.state.eventData.startDate.toString(),
                endDate: this.state.eventData.endDate.toString()
            },
        });

    }              

=============================
SEARCH BAR 

<input type="range" value={this.state.value} onChange={this.handleChange.bind(this)} />
                    Rental price from: {this.state.value} $  
                                                                 
